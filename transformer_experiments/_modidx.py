# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/transformer-experiments',
                'doc_host': 'https://spather.github.io',
                'git_url': 'https://github.com/spather/transformer-experiments',
                'lib_path': 'transformer_experiments'},
  'syms': { 'transformer_experiments.common.databatcher': { 'transformer_experiments.common.databatcher.DataBatcher': ( 'common/databatcher.html#databatcher',
                                                                                                                        'transformer_experiments/common/databatcher.py'),
                                                            'transformer_experiments.common.databatcher.DataBatcher.__init__': ( 'common/databatcher.html#databatcher.__init__',
                                                                                                                                 'transformer_experiments/common/databatcher.py'),
                                                            'transformer_experiments.common.databatcher.DataBatcher.__iter__': ( 'common/databatcher.html#databatcher.__iter__',
                                                                                                                                 'transformer_experiments/common/databatcher.py'),
                                                            'transformer_experiments.common.databatcher.DataBatcher.__len__': ( 'common/databatcher.html#databatcher.__len__',
                                                                                                                                'transformer_experiments/common/databatcher.py')},
            'transformer_experiments.common.text_analysis': { 'transformer_experiments.common.text_analysis.SubstringFrequencyAnalysis': ( 'common/text-analysis.html#substringfrequencyanalysis',
                                                                                                                                           'transformer_experiments/common/text_analysis.py'),
                                                              'transformer_experiments.common.text_analysis.SubstringFrequencyAnalysis.__init__': ( 'common/text-analysis.html#substringfrequencyanalysis.__init__',
                                                                                                                                                    'transformer_experiments/common/text_analysis.py'),
                                                              'transformer_experiments.common.text_analysis.SubstringFrequencyAnalysis.print_summary': ( 'common/text-analysis.html#substringfrequencyanalysis.print_summary',
                                                                                                                                                         'transformer_experiments/common/text_analysis.py'),
                                                              'transformer_experiments.common.text_analysis.top_nonzero_tokens': ( 'common/text-analysis.html#top_nonzero_tokens',
                                                                                                                                   'transformer_experiments/common/text_analysis.py')},
            'transformer_experiments.common.utils': { 'transformer_experiments.common.utils.DataWrapper': ( 'common/utils.html#datawrapper',
                                                                                                            'transformer_experiments/common/utils.py'),
                                                      'transformer_experiments.common.utils.DataWrapper.__init__': ( 'common/utils.html#datawrapper.__init__',
                                                                                                                     'transformer_experiments/common/utils.py'),
                                                      'transformer_experiments.common.utils.DataWrapper.__repr__': ( 'common/utils.html#datawrapper.__repr__',
                                                                                                                     'transformer_experiments/common/utils.py'),
                                                      'transformer_experiments.common.utils.DataWrapper.__str__': ( 'common/utils.html#datawrapper.__str__',
                                                                                                                    'transformer_experiments/common/utils.py'),
                                                      'transformer_experiments.common.utils.DataWrapper.print': ( 'common/utils.html#datawrapper.print',
                                                                                                                  'transformer_experiments/common/utils.py'),
                                                      'transformer_experiments.common.utils.aggregate_by_string_key': ( 'common/utils.html#aggregate_by_string_key',
                                                                                                                        'transformer_experiments/common/utils.py')},
            'transformer_experiments.dataset_split': { 'transformer_experiments.dataset_split.split_text_dataset': ( 'training/dataset-split.html#split_text_dataset',
                                                                                                                     'transformer_experiments/dataset_split.py')},
            'transformer_experiments.datasets.tinyshakespeare': { 'transformer_experiments.datasets.tinyshakespeare.TinyShakespeareDataSet': ( 'datasets/tinyshakespeare.html#tinyshakespearedataset',
                                                                                                                                               'transformer_experiments/datasets/tinyshakespeare.py'),
                                                                  'transformer_experiments.datasets.tinyshakespeare.TinyShakespeareDataSet.__init__': ( 'datasets/tinyshakespeare.html#tinyshakespearedataset.__init__',
                                                                                                                                                        'transformer_experiments/datasets/tinyshakespeare.py'),
                                                                  'transformer_experiments.datasets.tinyshakespeare.TinyShakespeareDataSet._get_text': ( 'datasets/tinyshakespeare.html#tinyshakespearedataset._get_text',
                                                                                                                                                         'transformer_experiments/datasets/tinyshakespeare.py')},
            'transformer_experiments.experiments.block_internals': { 'transformer_experiments.experiments.block_internals.BlockInternalsExperiment': ( 'experiments/block-internals.html#blockinternalsexperiment',
                                                                                                                                                       'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment.__init__': ( 'experiments/block-internals.html#blockinternalsexperiment.__init__',
                                                                                                                                                                'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment._ffwd_output_filename': ( 'experiments/block-internals.html#blockinternalsexperiment._ffwd_output_filename',
                                                                                                                                                                             'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment._filename_stem': ( 'experiments/block-internals.html#blockinternalsexperiment._filename_stem',
                                                                                                                                                                      'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment._head_output_filename': ( 'experiments/block-internals.html#blockinternalsexperiment._head_output_filename',
                                                                                                                                                                             'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment._input_filename': ( 'experiments/block-internals.html#blockinternalsexperiment._input_filename',
                                                                                                                                                                       'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment._proj_output_filename': ( 'experiments/block-internals.html#blockinternalsexperiment._proj_output_filename',
                                                                                                                                                                             'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment.load': ( 'experiments/block-internals.html#blockinternalsexperiment.load',
                                                                                                                                                            'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment.raw_results': ( 'experiments/block-internals.html#blockinternalsexperiment.raw_results',
                                                                                                                                                                   'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsExperiment.run': ( 'experiments/block-internals.html#blockinternalsexperiment.run',
                                                                                                                                                           'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.BlockInternalsResult': ( 'experiments/block-internals.html#blockinternalsresult',
                                                                                                                                                   'transformer_experiments/experiments/block_internals.py'),
                                                                     'transformer_experiments.experiments.block_internals.run': ( 'experiments/block-internals.html#run',
                                                                                                                                  'transformer_experiments/experiments/block_internals.py')},
            'transformer_experiments.models.transformer': { 'transformer_experiments.models.transformer.Block': ( 'models/transformer.html#block',
                                                                                                                  'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.Block.__init__': ( 'models/transformer.html#block.__init__',
                                                                                                                           'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.Block.forward': ( 'models/transformer.html#block.forward',
                                                                                                                          'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.FeedForward': ( 'models/transformer.html#feedforward',
                                                                                                                        'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.FeedForward.__init__': ( 'models/transformer.html#feedforward.__init__',
                                                                                                                                 'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.FeedForward.forward': ( 'models/transformer.html#feedforward.forward',
                                                                                                                                'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.Head': ( 'models/transformer.html#head',
                                                                                                                 'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.Head.__init__': ( 'models/transformer.html#head.__init__',
                                                                                                                          'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.Head.forward': ( 'models/transformer.html#head.forward',
                                                                                                                         'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.MultiHeadAttention': ( 'models/transformer.html#multiheadattention',
                                                                                                                               'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.MultiHeadAttention.__init__': ( 'models/transformer.html#multiheadattention.__init__',
                                                                                                                                        'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.MultiHeadAttention.forward': ( 'models/transformer.html#multiheadattention.forward',
                                                                                                                                       'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.TransformerLanguageModel': ( 'models/transformer.html#transformerlanguagemodel',
                                                                                                                                     'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.TransformerLanguageModel.__init__': ( 'models/transformer.html#transformerlanguagemodel.__init__',
                                                                                                                                              'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.TransformerLanguageModel.forward': ( 'models/transformer.html#transformerlanguagemodel.forward',
                                                                                                                                             'transformer_experiments/models/transformer.py'),
                                                            'transformer_experiments.models.transformer.TransformerLanguageModel.generate': ( 'models/transformer.html#transformerlanguagemodel.generate',
                                                                                                                                              'transformer_experiments/models/transformer.py')},
            'transformer_experiments.models.transformer_helpers': { 'transformer_experiments.models.transformer_helpers.EncodingHelpers': ( 'models/transformer-helpers.html#encodinghelpers',
                                                                                                                                            'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.EncodingHelpers.__init__': ( 'models/transformer-helpers.html#encodinghelpers.__init__',
                                                                                                                                                     'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.EncodingHelpers.embed_string': ( 'models/transformer-helpers.html#encodinghelpers.embed_string',
                                                                                                                                                         'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.EncodingHelpers.embed_tokens': ( 'models/transformer-helpers.html#encodinghelpers.embed_tokens',
                                                                                                                                                         'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.EncodingHelpers.stringify_tokens': ( 'models/transformer-helpers.html#encodinghelpers.stringify_tokens',
                                                                                                                                                             'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.EncodingHelpers.tokenize_string': ( 'models/transformer-helpers.html#encodinghelpers.tokenize_string',
                                                                                                                                                            'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.InputOutputAccessor': ( 'models/transformer-helpers.html#inputoutputaccessor',
                                                                                                                                                'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.InputOutputAccessor.__init__': ( 'models/transformer-helpers.html#inputoutputaccessor.__init__',
                                                                                                                                                         'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.InputOutputAccessor.input': ( 'models/transformer-helpers.html#inputoutputaccessor.input',
                                                                                                                                                      'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.InputOutputAccessor.inputs': ( 'models/transformer-helpers.html#inputoutputaccessor.inputs',
                                                                                                                                                       'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.InputOutputAccessor.output': ( 'models/transformer-helpers.html#inputoutputaccessor.output',
                                                                                                                                                       'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.TransformerAccessors': ( 'models/transformer-helpers.html#transformeraccessors',
                                                                                                                                                 'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.TransformerAccessors.__init__': ( 'models/transformer-helpers.html#transformeraccessors.__init__',
                                                                                                                                                          'transformer_experiments/models/transformer_helpers.py'),
                                                                    'transformer_experiments.models.transformer_helpers.TransformerAccessors.copy_block_from_model': ( 'models/transformer-helpers.html#transformeraccessors.copy_block_from_model',
                                                                                                                                                                       'transformer_experiments/models/transformer_helpers.py')},
            'transformer_experiments.tokenizers.char_tokenizer': { 'transformer_experiments.tokenizers.char_tokenizer.CharacterTokenizer': ( 'tokenizers/char-tokenizer.html#charactertokenizer',
                                                                                                                                             'transformer_experiments/tokenizers/char_tokenizer.py'),
                                                                   'transformer_experiments.tokenizers.char_tokenizer.CharacterTokenizer.__init__': ( 'tokenizers/char-tokenizer.html#charactertokenizer.__init__',
                                                                                                                                                      'transformer_experiments/tokenizers/char_tokenizer.py'),
                                                                   'transformer_experiments.tokenizers.char_tokenizer.CharacterTokenizer.decode': ( 'tokenizers/char-tokenizer.html#charactertokenizer.decode',
                                                                                                                                                    'transformer_experiments/tokenizers/char_tokenizer.py'),
                                                                   'transformer_experiments.tokenizers.char_tokenizer.CharacterTokenizer.encode': ( 'tokenizers/char-tokenizer.html#charactertokenizer.encode',
                                                                                                                                                    'transformer_experiments/tokenizers/char_tokenizer.py')},
            'transformer_experiments.trained_models.tinyshakespeare_transformer': { 'transformer_experiments.trained_models.tinyshakespeare_transformer.create_model_and_tokenizer': ( 'trained_models/tinyshakespeare-transformer.html#create_model_and_tokenizer',
                                                                                                                                                                                       'transformer_experiments/trained_models/tinyshakespeare_transformer.py')}}}
