# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/training/training-utils.ipynb.

# %% auto 0
__all__ = ['CheckPointer']

# %% ../nbs/training/training-utils.ipynb 2
from pathlib import Path
import tempfile
from typing import Dict, Generic, Protocol, Tuple, TypeVar

# %% ../nbs/training/training-utils.ipynb 3
import torch
from tqdm.auto import tqdm

# %% ../nbs/training/training-utils.ipynb 6
class CheckPointer:
    def __init__(self, output_dir: Path, filename_stem: str, start_num: int = 0):
        self.output_dir = output_dir
        self.filename_stem = filename_stem
        self.num = start_num

    def filename(self):
        return self.output_dir / f"{self.filename_stem}_{self.num:06d}.pt"

    def save_checkpoint(
        self, iters: int, model: torch.nn.Module, train_loss: float, val_loss: float
    ):
        torch.save(
            {
                "model_state_dict": model.state_dict(),
                "iters": iters,
                "train_loss": train_loss,
                "val_loss": val_loss,
            },
            self.filename(),
        )
        self.num += 1
